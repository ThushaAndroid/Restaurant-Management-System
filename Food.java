/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Inf;

import Codes.DBconnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author user
 */
public class Food extends javax.swing.JFrame {

    Connection conn=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    
     
    public Food() {
        initComponents();
        conn=DBconnect.connect();
        tableload();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        updatebtn = new javax.swing.JButton();
        insertbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        clearbtn = new javax.swing.JButton();
        searchbox = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        typebox = new javax.swing.JComboBox<>();
        foodnamebox = new javax.swing.JComboBox<>();
        foodpricebox = new javax.swing.JTextField();
        idlbl = new javax.swing.JLabel();
        backbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inf/food1.jpg"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Food Menu");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Table.setBackground(new java.awt.Color(204, 204, 204));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        Table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 520, 300));

        jPanel3.setBackground(new java.awt.Color(153, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        updatebtn.setBackground(new java.awt.Color(204, 255, 51));
        updatebtn.setText("UPDATE");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });
        jPanel3.add(updatebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        insertbtn.setBackground(new java.awt.Color(204, 255, 51));
        insertbtn.setText("INSERT");
        insertbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertbtnActionPerformed(evt);
            }
        });
        jPanel3.add(insertbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        deletebtn.setBackground(new java.awt.Color(204, 255, 51));
        deletebtn.setText("DELETE");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        jPanel3.add(deletebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, -1, -1));

        clearbtn.setBackground(new java.awt.Color(204, 255, 51));
        clearbtn.setText("CLEAR");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });
        jPanel3.add(clearbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        searchbox.setToolTipText("Search");
        searchbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchboxKeyReleased(evt);
            }
        });
        jPanel3.add(searchbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 120, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 0, 520, 60));

        jPanel2.setBackground(new java.awt.Color(51, 204, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Type");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Food Price");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Food Name");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, -1));

        typebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Full" }));
        typebox.setToolTipText("Select");
        jPanel2.add(typebox, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 80, -1));

        foodnamebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kottu", "Rice", "Biryani", "Pizza", "Nasi Goreng" }));
        foodnamebox.setToolTipText("Select");
        jPanel2.add(foodnamebox, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 220, -1));
        jPanel2.add(foodpricebox, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 220, -1));

        idlbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        idlbl.setText("ID");
        jPanel2.add(idlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 520, 100));

        backbtn.setBackground(new java.awt.Color(204, 255, 51));
        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });
        jPanel1.add(backbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, -1, -1));

        exitbtn.setBackground(new java.awt.Color(204, 255, 51));
        exitbtn.setText("Exit");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });
        jPanel1.add(exitbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 430, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inf/Food menu.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 460));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        
        Mainframe m1=new Mainframe();
        m1.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_backbtnActionPerformed

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        
        System.exit(0);
    }//GEN-LAST:event_exitbtnActionPerformed

    private void insertbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertbtnActionPerformed
        
        String food;
        String type;
        String price;
       
       
        
        try{
            
        food=foodnamebox.getSelectedItem().toString();
        type=typebox.getSelectedItem().toString();
        /*price=Float.parseFloat(foodpricebox.getText().toString());*/
       
        
        if(food=="Kottu" && type=="Normal"){
            
            
            price="500.0";
            foodpricebox.setText(price);
        }
        else if(food=="Kottu" && type=="Full"){
            
            
            price="700.0";
            foodpricebox.setText(price);
        }
        else if(food=="Rice" && type=="Normal"){
            
           
            price="550.0";
            foodpricebox.setText(price);
        }
        else if(food=="Rice" && type=="Full"){
            
           
            price="750.0";
            foodpricebox.setText(price);
        }
        
        else if(food=="Nasi Goreng" && type=="Normal"){
            
           
            price="950.0";
            foodpricebox.setText(price);
        }
        else if(food=="Nasi Goreng" && type=="Full"){
            
           
            price="1750.0";
            foodpricebox.setText(price);
        }
        
         else if(food=="Pizza" && type=="Normal"){
            
           
            price="850.0";
            foodpricebox.setText(price);
        }
        else if(food=="Pizza" && type=="Full"){
            
           
            price="1600.0";
            foodpricebox.setText(price);
        }
        
        else if(food=="Biryani" && type=="Normal"){
            
           
            price="800.0";
            foodpricebox.setText(price);
        }
        
        else{
             price="1250.0";
            foodpricebox.setText(price);            
        }
       
            String sql="INSERT INTO food(fname,ftype,fprice) VALUES ('"+food+"','"+type+"','"+price+"')";
            pst=conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Inserted");
        }catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(null, "Enter correct value!");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
          tableload();
        }
    
    public void tableload(){
      
      try{
         String sql="SELECT fname AS FOOD,ftype AS FOOD_TYPE,fprice AS PRICE,fid AS ID FROM food";
         pst=conn.prepareStatement(sql);
         rs=pst.executeQuery();
         Table.setModel(DbUtils.resultSetToTableModel(rs));
          
      }catch(Exception e){
          JOptionPane.showMessageDialog(null,e);
      }
  }
    
    public void tabledata(){
        
        int r=Table.getSelectedRow();
        
        String food= Table.getValueAt(r, 0).toString();
        String type=  Table.getValueAt(r, 1).toString();
        String price= Table.getValueAt(r, 2).toString();
        String fid=  Table.getValueAt(r, 3).toString();
        
        foodnamebox.setSelectedItem(food);
        typebox.setSelectedItem(type);
        foodpricebox.setText(price);
        idlbl.setText(fid);
        
           
    }//GEN-LAST:event_insertbtnActionPerformed

    private void TableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableKeyReleased
       tabledata();
    }//GEN-LAST:event_TableKeyReleased

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        tabledata();
    }//GEN-LAST:event_TableMouseClicked

    private void searchboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchboxKeyReleased
        search();
    }//GEN-LAST:event_searchboxKeyReleased

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        update();
    }//GEN-LAST:event_updatebtnActionPerformed

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
        clear();
    }//GEN-LAST:event_clearbtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
         int check=JOptionPane.showConfirmDialog(null, "Do you want to delete!");
        
        if(check==0){
            
            String id=idlbl.getText();
            
            try{
                String sql="DELETE FROM food WHERE fid='"+id+"'";
                pst=conn.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Deleted");
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        tableload();
        clear();
    }//GEN-LAST:event_deletebtnActionPerformed

     public void search(){
     
     String srh=searchbox.getText();
     
     try{
         String sql="SELECT fname AS FOOD,ftype AS FOOD_TYPE,fprice AS PRICE,fid AS ID FROM food WHERE fname LIKE'%"+srh+"%' OR fid LIKE '%"+srh+"%'";
         pst=conn.prepareStatement(sql);
         rs=pst.executeQuery();
         Table.setModel(DbUtils.resultSetToTableModel(rs));  
     }catch(Exception e){
         JOptionPane.showMessageDialog(null,e);
         
     }
 }  
     public void update(){
         
        String food= foodnamebox.getSelectedItem().toString();
        String type=  typebox.getSelectedItem().toString();
        String price;
        String id=idlbl.getText();
        
        if(food=="Kottu" && type=="Normal"){
            
            
            price="500.0";
            foodpricebox.setText(price);
        }
        else if(food=="Kottu" && type=="Full"){
            
            
            price="700.0";
            foodpricebox.setText(price);
        }
        else if(food=="Rice" && type=="Normal"){
            
           
            price="550.0";
            foodpricebox.setText(price);
        }
        else if(food=="Rice" && type=="Full"){
            
           
            price="750.0";
            foodpricebox.setText(price);
        }
        
        else if(food=="Nasi Goreng" && type=="Normal"){
            
           
            price="950.0";
            foodpricebox.setText(price);
        }
        else if(food=="Nasi Goreng" && type=="Full"){
            
           
            price="1750.0";
            foodpricebox.setText(price);
        }
        
         else if(food=="Pizza" && type=="Normal"){
            
           
            price="850.0";
            foodpricebox.setText(price);
        }
        else if(food=="Pizza" && type=="Full"){
            
           
            price="1600.0";
            foodpricebox.setText(price);
        }
        
        else if(food=="Biryani" && type=="Normal"){
            
           
            price="800.0";
            foodpricebox.setText(price);
        }
        
        else{
             price="1250.0";
            foodpricebox.setText(price);
            
        }
       

         try{
        String sql="UPDATE food SET fname='"+food+"',ftype='"+type+"',fprice='"+price+"' WHERE fid='"+id+"'";
        pst=conn.prepareStatement(sql);
        pst.execute();
        JOptionPane.showMessageDialog(null, "Updated");
    }catch(Exception e){
         JOptionPane.showMessageDialog(null, e);
    }
    tableload();
     }
     
     public void clear(){
    
    searchbox.setText("");
    foodnamebox.setSelectedIndex(0);
    typebox.setSelectedIndex(0);
    foodpricebox.setText("");
    idlbl.setText("");
}    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Food().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton backbtn;
    private javax.swing.JButton clearbtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton exitbtn;
    private javax.swing.JComboBox<String> foodnamebox;
    private javax.swing.JTextField foodpricebox;
    private javax.swing.JLabel idlbl;
    private javax.swing.JButton insertbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchbox;
    private javax.swing.JComboBox<String> typebox;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
